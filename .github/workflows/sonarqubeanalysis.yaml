name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('src/adservice/**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Print Gradle Wrapper Script
      run: |
        cd src/adservice
        head -n 20 gradlew

    - name: Verify Gradle Wrapper Executability
      run: |
        cd src/adservice
        ls -l gradlew
        file gradlew

    - name: Verify JDK Installation
      run: |
        java -version
        javac -version

    - name: Test Gradle Wrapper Execution
      run: |
        cd src/adservice
        ./gradlew --version

    - name: Debug Gradle Wrapper Execution
      run: |
        cd src/adservice
        ./gradlew --info --stacktrace

    - name: Build and Analyze
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_AUTH_TOKEN: ${{ secrets.SONAR_AUTH_TOKEN }}
      run: |
        cd src/adservice
        ./gradlew build sonarqube \
          -Dsonar.projectKey=my-project \
          -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
          -Dsonar.pullrequest.branch=${{ github.head_ref }} \
          -Dsonar.pullrequest.base=${{ github.base_ref }} \
          -Dsonar.host.url=${SONAR_HOST_URL} \
          -Dsonar.login=${SONAR_AUTH_TOKEN}
