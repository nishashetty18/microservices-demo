plugins {
    id 'com.google.protobuf' version '0.9.4'
    id 'com.github.sherter.google-java-format' version '0.9'
    id 'idea'
    id 'application'
    id "org.sonarqube" version "5.0.0.4638"
}

sonarqube {
    properties {
        property "sonar.projectKey", "adservice-key"
        property "sonar.projectName", "adservice"
        property "sonar.pullrequest.key", System.getenv("SONAR_PULLREQUEST_KEY")
        property "sonar.pullrequest.branch", System.getenv("SONAR_PULLREQUEST_BRANCH")
        property "sonar.pullrequest.base", System.getenv("SONAR_PULLREQUEST_BASE")
        property "sonar.host.url", "http://127.0.0.1:9000"
        property "sonar.token", "sqp_d7ac7c9f3ff4a3a500c7ad27abc23a30d814ea26"
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.maven.apache.org/maven2" }
    mavenLocal()
}

description = 'Ad Service'
group = "adservice"
version = "0.1.0-SNAPSHOT"

def grpcVersion = "1.63.0"
def jacksonCoreVersion = "2.17.0"
def jacksonDatabindVersion = "2.17.0"
def protocVersion = "3.25.3"

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

ext {
    speed = project.hasProperty('speed') ? project.property('speed').toBoolean() : false
    offlineCompile = new File("$buildDir/output/lib")
}

dependencies {
    if (speed) {
        implementation fileTree(dir: offlineCompile, include: '*.jar')
    } else {
        implementation "com.google.api.grpc:proto-google-common-protos:2.37.1",
                "javax.annotation:javax.annotation-api:1.3.2",
                "io.grpc:grpc-protobuf:${grpcVersion}",
                "io.grpc:grpc-stub:${grpcVersion}",
                "io.grpc:grpc-netty:${grpcVersion}",
                "io.grpc:grpc-services:${grpcVersion}",
                "io.grpc:grpc-census:${grpcVersion}",
                "org.apache.logging.log4j:log4j-core:2.23.1",
                "com.google.protobuf:protobuf-java:${protocVersion}"

        runtimeOnly "com.fasterxml.jackson.core:jackson-core:${jacksonCoreVersion}",
                "com.fasterxml.jackson.core:jackson-databind:${jacksonDatabindVersion}",
                "io.netty:netty-tcnative-boringssl-static:2.0.65.Final"
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
        ofSourceSet('main')
    }
}

googleJavaFormat {
    toolVersion '1.22.0'
}

application {
    mainClass = 'hipstershop.AdService'
}

sourceSets {
    main {
        java {
            srcDirs 'hipstershop'
            srcDirs 'build/generated/source/proto/main/java/hipstershop'
            srcDirs 'build/generated/source/proto/main/grpc/hipstershop'
        }
    }
}

startScripts.enabled = false
verifyGoogleJavaFormat {
    exclude 'src/main/java/hipstershop/AdService.java'
    exclude 'src/main/java/hipstershop/AdServiceClient.java'
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:deprecation']
}

task downloadRepos(type: Copy) {
    from configurations.compileClasspath
    into offlineCompile
}

task adService(type: CreateStartScripts) {
    mainClass.set('hipstershop.AdService')
    applicationName = 'AdService'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task adServiceClient(type: CreateStartScripts) {
    mainClass.set('hipstershop.AdServiceClient')
    applicationName = 'AdServiceClient'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(adService)
    from(adServiceClient)
    filePermissions.set(0755) // Updated method for setting file permissions
}
